#ifndef __PARSER_H__
#define __PARSER_H__

#include <stdio.h>
#include <stdbool.h>

/* the parser builds a tree of ASN1 types */
struct node
{
	/* DER type */
	unsigned int asn1tag;	/* ASN1 tag number */
	unsigned int asn1class;	/* UNIVERSAL/CONTEXT/etc */
	/* DER value */
	unsigned int length;	/* length of the value data */
	unsigned char *value;	/* DER encoded value */
	/* a tree of nodes */
	struct node *children;	/* NULL if not a constructed type */
	struct node *siblings;	/* linked list of children */
};

/* lexer token type */
typedef int token_t;

void set_input_file(char *);

token_t peek_token(void);
void expect_token(token_t, char *);
token_t next_token(void);
char *token_text(void);

void parse_error(const char *, ...);

void verbose(const char *, ...);
void vverbose(const char *, ...);
